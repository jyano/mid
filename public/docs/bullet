// Game simulation usually generates a sequence of images that are played at some frame rate.
// This is called discrete simulation. In discrete simulation, rigid bodies can move by
// a large amount in one time step. If a physics engine doesn't account for the large motion, 
// you may see some objects incorrectly pass through each other. This effect is called tunneling.
// By default, Box2D uses continuous collision detection (CCD) to prevent dynamic bodies
// from tunneling through static bodies. This is done by sweeping shapes from their old position 
// to their new positions. The engine looks for new collisions during the sweep 
// and computes the time of impact (TOI) for these collisions. Bodies are moved to their
// first TOI and then halted for the remainder of the time step.
//
// Normally CCD is not used between dynamic bodies. This is done to keep performance reasonable. 
// In some game scenarios you need dynamic bodies to use CCD. For example, you may want to shoot
// a high speed bullet at a stack of dynamic bricks. Without CCD, the bullet might tunnel through
// the bricks.
//
// Fast moving objects in Box2D can be labeled as bullets. Bullets will perform CCD with both
// static and dynamic bodies. You should decide what bodies 
// should be bullets based on your game design
//  If you decide a body should be treated as a bullet, use the following setting.
//
// bodyDef.bullet = true;
//
// The bullet flag only affects dynamic bodies.
// Box2D performs continuous collision sequentially, so bullets may miss fast moving bodies.
// void SetBullet(bool flag); bool IsBullet() const;